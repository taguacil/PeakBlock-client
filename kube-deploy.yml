# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  api_url : 'http://localhost:3000/api/node'
  dockerRegistryServiceConnection: '3fb49f44-9adc-421c-8e6f-0a85c62a04bb'
  imageRepository: 'peakblockfrontend'
  containerRegistry: 'cohub.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cohub1026f736-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: BuildBackend
  displayName: Build backend stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build the docker image 
      inputs:
        command: 'build'
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
        arguments: '--build-arg api_url=$(api_url)'
    - task: Docker@2
      displayName: Push the image to container registry
      inputs:
        command: 'push'
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection) 
        
    - upload: manifests
      artifact: manifests
- stage: DeployBackend
  displayName: Deploy backend stage
  dependsOn: BuildBackend

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'peakblockfrontend.ingress-basic'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)